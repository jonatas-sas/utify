name: Utify CI Tests
on:
  push:
  pull_request:
jobs:
  test:
    name: Run Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run Tests
        run: make test TIMEOUT=10m
      - name: Run Tests with Coverage
        run: make coverage
      - name: Check if Coverage File Exists
        run: |
          if [ -f coverage.out ]; then echo "Coverage file exists."; else echo "No coverage file found."; fi
      - name: Upload Coverage Report
        if: success()
        uses: codecov/codecov-action@v4
        with:
          files: coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Install golangci-lint
        run: |
          LINTER_VERSION=v1.55.2
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@$LINTER_VERSION
      - name: Tidy Go Modules
        run: go mod tidy
      - name: Run linters
        run: |
          case "$RUNNER_OS" in
            Windows) go vet ./... ;;
            *) make lint ;;
          esac
